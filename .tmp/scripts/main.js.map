{"version":3,"sources":["main.js"],"names":["cards","document","querySelectorAll","flipCounterTextContainer","querySelector","flipCounterText","firstElementChild","textContent","board","imageNodes","flipCounterSVGCopy","bestScore","Infinity","flipCount","cardIsFlipped","firstCard","secondCard","lockBoard","flipCard","classList","add","checkForMatch","checkWin","removeProperty","setBestScore","isMatch","dataset","image","disableFlipCard","unflipCards","removeEventListener","resetPairs","setTimeout","remove","shuffle","array","imagesCopy","shuffled","length","randomIndex","Math","floor","random","splice","src","alt","push","getAndSetBestScore","storedBestScore","window","localStorage","getItem","setItem","startGame","shuffledImages","forEach","imageNode","index","parentElement","card","addEventListener","every","contains","onload"],"mappings":";;;;;;;;;;AAAA,IAAMA,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,CAAd;AACA,IAAMC,wBAAwB,GAAGF,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,CAAjC;AACA,IAAIC,eAAe,GAAGJ,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,EAA6CE,iBAA7C,CAA+DC,WAArF;AACA,IAAMC,KAAK,GAAGP,QAAQ,CAACG,aAAT,CAAuB,kBAAvB,CAAd;AACA,IAAMK,UAAU,GAAGR,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,CAAnB;AACA,IAAMQ,kBAAkB,GAAGT,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAA3B;AACA,IAAIO,SAAS,GAAGC,QAAhB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,aAAa,GAAG,KAApB;AACA,IAAIC,SAAJ,EAAeC,UAAf;AACA,IAAIC,SAAS,GAAG,KAAhB;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAID,SAAJ,EAAe;AACf,MAAI,SAASF,SAAb,EAAwB;AAExB,OAAKI,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AAEAP,EAAAA,SAAS;AACTZ,EAAAA,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,EAA6CE,iBAA7C,CAA+DC,WAA/D,GAA6EM,SAA7E;;AAEA,MAAI,CAACC,aAAL,EAAoB;AAClB;AACAA,IAAAA,aAAa,GAAG,IAAhB;AACAC,IAAAA,SAAS,GAAG,IAAZ;AAEA;AACD,GAfiB,CAgBlB;;;AACAD,EAAAA,aAAa,GAAG,KAAhB;AACAE,EAAAA,UAAU,GAAG,IAAb;AAEAK,EAAAA,aAAa;;AACb,MAAIC,QAAQ,EAAZ,EAAgB;AACdZ,IAAAA,kBAAkB,CAACS,SAAnB,CAA6BC,GAA7B,CAAiC,UAAjC;AACAjB,IAAAA,wBAAwB,CAACgB,SAAzB,CAAmCI,cAAnC,CAAkD,MAAlD;AACAC,IAAAA,YAAY;AACb;AACF;;AAED,SAASH,aAAT,GAAyB;AACvB,MAAII,OAAO,GAAGV,SAAS,CAACW,OAAV,CAAkBC,KAAlB,KAA4BX,UAAU,CAACU,OAAX,CAAmBC,KAA7D;AAEAF,EAAAA,OAAO,GAAGG,eAAe,EAAlB,GAAuBC,WAAW,EAAzC;AACD;;AAED,SAASD,eAAT,GAA2B;AACzBb,EAAAA,SAAS,CAACe,mBAAV,CAA8B,OAA9B,EAAuCZ,QAAvC;AACAF,EAAAA,UAAU,CAACc,mBAAX,CAA+B,OAA/B,EAAwCZ,QAAxC;AAEAa,EAAAA,UAAU;AACX;;AAED,SAASF,WAAT,GAAuB;AACrBZ,EAAAA,SAAS,GAAG,IAAZ;AAEAe,EAAAA,UAAU,CAAC,YAAM;AACfjB,IAAAA,SAAS,CAACI,SAAV,CAAoBc,MAApB,CAA2B,MAA3B;AACAjB,IAAAA,UAAU,CAACG,SAAX,CAAqBc,MAArB,CAA4B,MAA5B;AAEAF,IAAAA,UAAU;AACX,GALS,EAKP,IALO,CAAV;AAMD;;AAED,SAASA,UAAT,GAAsB;AACnBjB,EAAAA,aADmB,GACU,KADV;AACJG,EAAAA,SADI,GACiB,KADjB;AAEnBF,EAAAA,SAFmB,GAEO,IAFP;AAERC,EAAAA,UAFQ,GAEa,IAFb;AAGrB;;AAED,SAASkB,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAMC,UAAU,sBAAOD,KAAP,CAAhB;;AACA,MAAME,QAAQ,GAAG,EAAjB;;AAEA,SAAOD,UAAU,CAACE,MAAX,GAAoB,CAA3B,EAA8B;AAC5B,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACE,MAAtC,CAApB;AAD4B,8BAKxBF,UAAU,CAACO,MAAX,CAAkBJ,WAAlB,EAA+B,CAA/B,EAAkC,CAAlC,CALwB;AAAA,QAG1BK,GAH0B,uBAG1BA,GAH0B;AAAA,QAI1BC,GAJ0B,uBAI1BA,GAJ0B;AAM5BR,IAAAA,QAAQ,CAACS,IAAT,CAAc;AACZF,MAAAA,GAAG,EAAHA,GADY;AAEZC,MAAAA,GAAG,EAAHA;AAFY,KAAd;AAKD;;AAED,SAAOR,QAAP;AACD;;AAED,SAASU,kBAAT,GAA8B;AAC5B,MAAMC,eAAe,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAxB;;AACA,MAAIH,eAAe,IAAIA,eAAe,GAAGrC,SAAzC,EAAoD;AAClDA,IAAAA,SAAS,GAAGqC,eAAZ;AACA/C,IAAAA,QAAQ,CAACG,aAAT,CAAuB,aAAvB,EAAsCG,WAAtC,GAAoDI,SAApD;AACD;AACF;;AAED,SAASa,YAAT,GAAwB;AACtB,MAAIX,SAAS,GAAGF,SAAhB,EAA2B;AACzBA,IAAAA,SAAS,GAAGE,SAAZ;AACAoC,IAAAA,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4B,WAA5B,EAAyCvC,SAAzC;AACAZ,IAAAA,QAAQ,CAACG,aAAT,CAAuB,aAAvB,EAAsCG,WAAtC,GAAoDM,SAApD;AACD;AACF;;AAED,SAASwC,SAAT,GAAqB;AACnB,MAAMC,cAAc,GAAGpB,OAAO,CAACzB,UAAD,CAA9B;;AACA,qBAAIA,UAAJ,EAAgB8C,OAAhB,CAAwB,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AAC5CD,IAAAA,SAAS,CAACZ,GAAV,GAAgBU,cAAc,CAACG,KAAD,CAAd,CAAsBb,GAAtC;AACAY,IAAAA,SAAS,CAACX,GAAV,GAAgBS,cAAc,CAACG,KAAD,CAAd,CAAsBZ,GAAtC;AACAW,IAAAA,SAAS,CAACE,aAAV,CAAwBhC,OAAxB,CAAgCC,KAAhC,GAAwC2B,cAAc,CAACG,KAAD,CAAd,CAAsBZ,GAA9D;AACAW,IAAAA,SAAS,CAACE,aAAV,CAAwBvC,SAAxB,CAAkCC,GAAlC,CAAsC,MAAtC;AACD,GALD;;AAOAP,EAAAA,SAAS,GAAG,CAAZ;AACAZ,EAAAA,QAAQ,CAACG,aAAT,CAAuB,oBAAvB,EAA6CE,iBAA7C,CAA+DC,WAA/D,GAA6E,CAA7E;AACAwB,EAAAA,UAAU;AACVrB,EAAAA,kBAAkB,CAACS,SAAnB,CAA6Bc,MAA7B,CAAoC,UAApC;AACAjC,EAAAA,KAAK,CAACuD,OAAN,CAAc,UAAAI,IAAI;AAAA,WAAIA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B1C,QAA/B,CAAJ;AAAA,GAAlB;AACD;;AAED,SAASI,QAAT,GAAoB;AAClB,SAAO,mBAAIb,UAAJ,EAAgBoD,KAAhB,CAAsB,UAAAL,SAAS;AAAA,WAAIA,SAAS,CAACE,aAAV,CAAwBvC,SAAxB,CAAkC2C,QAAlC,CAA2C,MAA3C,CAAJ;AAAA,GAA/B,CAAP;AACD;;AAED7D,QAAQ,CAACG,aAAT,CAAuB,MAAvB,EAA+BwD,gBAA/B,CAAgD,OAAhD,EAAyDP,SAAzD;;AAGAJ,MAAM,CAACc,MAAP,GAAgB,YAAY;AAC1BV,EAAAA,SAAS;AACTN,EAAAA,kBAAkB;AACnB,CAHD;;AAOA/C,KAAK,CAACuD,OAAN,CAAc,UAAAI,IAAI;AAAA,SAAIA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B1C,QAA/B,CAAJ;AAAA,CAAlB","sourcesContent":["const cards = document.querySelectorAll('.memory-card');\r\nconst flipCounterTextContainer = document.querySelector('#flip-counter-text');\r\nlet flipCounterText = document.querySelector('#flip-counter-text').firstElementChild.textContent;\r\nconst board = document.querySelector('#image-container');\r\nconst imageNodes = document.querySelectorAll('.front-face');\r\nconst flipCounterSVGCopy = document.querySelector('.svg-text')\r\nlet bestScore = Infinity;\r\n\r\nlet flipCount = 0;\r\nlet cardIsFlipped = false;\r\nlet firstCard, secondCard;\r\nlet lockBoard = false;\r\n\r\nfunction flipCard() {\r\n  if (lockBoard) return;\r\n  if (this === firstCard) return;\r\n\r\n  this.classList.add('flip');\r\n\r\n  flipCount++;\r\n  document.querySelector('#flip-counter-text').firstElementChild.textContent = flipCount;\r\n\r\n  if (!cardIsFlipped) {\r\n    // first click\r\n    cardIsFlipped = true;\r\n    firstCard = this;\r\n\r\n    return;\r\n  }\r\n  // second click\r\n  cardIsFlipped = false;\r\n  secondCard = this;\r\n\r\n  checkForMatch();\r\n  if (checkWin()) {\r\n    flipCounterSVGCopy.classList.add('win-text');\r\n    flipCounterTextContainer.classList.removeProperty('fill');\r\n    setBestScore();\r\n  }\r\n}\r\n\r\nfunction checkForMatch() {\r\n  let isMatch = firstCard.dataset.image === secondCard.dataset.image;\r\n\r\n  isMatch ? disableFlipCard() : unflipCards();\r\n}\r\n\r\nfunction disableFlipCard() {\r\n  firstCard.removeEventListener('click', flipCard);\r\n  secondCard.removeEventListener('click', flipCard);\r\n\r\n  resetPairs();\r\n}\r\n\r\nfunction unflipCards() {\r\n  lockBoard = true;\r\n\r\n  setTimeout(() => {\r\n    firstCard.classList.remove('flip');\r\n    secondCard.classList.remove('flip');\r\n\r\n    resetPairs();\r\n  }, 1000)\r\n}\r\n\r\nfunction resetPairs() {\r\n  [cardIsFlipped, lockBoard] = [false, false];\r\n  [firstCard, secondCard] = [null, null];\r\n}\r\n\r\nfunction shuffle(array) {\r\n  const imagesCopy = [...array];\r\n  const shuffled = [];\r\n\r\n  while (imagesCopy.length > 0) {\r\n    const randomIndex = Math.floor(Math.random() * imagesCopy.length);\r\n    const {\r\n      src,\r\n      alt\r\n    } = imagesCopy.splice(randomIndex, 1)[0]\r\n    shuffled.push({\r\n      src,\r\n      alt\r\n    });\r\n\r\n  }\r\n\r\n  return shuffled;\r\n}\r\n\r\nfunction getAndSetBestScore() {\r\n  const storedBestScore = window.localStorage.getItem('bestScore');\r\n  if (storedBestScore && storedBestScore < bestScore) {\r\n    bestScore = storedBestScore;\r\n    document.querySelector('.best-score').textContent = bestScore;\r\n  }\r\n}\r\n\r\nfunction setBestScore() {\r\n  if (flipCount < bestScore) {\r\n    bestScore = flipCount;\r\n    window.localStorage.setItem('bestScore', flipCount);\r\n    document.querySelector('.best-score').textContent = flipCount;\r\n  }\r\n}\r\n\r\nfunction startGame() {\r\n  const shuffledImages = shuffle(imageNodes);\r\n  [...imageNodes].forEach((imageNode, index) => {\r\n    imageNode.src = shuffledImages[index].src;\r\n    imageNode.alt = shuffledImages[index].alt;\r\n    imageNode.parentElement.dataset.image = shuffledImages[index].alt;\r\n    imageNode.parentElement.classList.add('flip');\r\n  });\r\n\r\n  flipCount = 0;\r\n  document.querySelector('#flip-counter-text').firstElementChild.textContent = 0;\r\n  resetPairs();\r\n  flipCounterSVGCopy.classList.remove('win-text');\r\n  cards.forEach(card => card.addEventListener('click', flipCard));\r\n}\r\n\r\nfunction checkWin() {\r\n  return [...imageNodes].every(imageNode => imageNode.parentElement.classList.contains('flip'));\r\n}\r\n\r\ndocument.querySelector('.btn').addEventListener('click', startGame);\r\n\r\n\r\nwindow.onload = function () {\r\n  startGame();\r\n  getAndSetBestScore();\r\n}\r\n\r\n\r\n\r\ncards.forEach(card => card.addEventListener('click', flipCard));\r\n"],"file":"main.js"}